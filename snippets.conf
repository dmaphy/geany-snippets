# Geany's auto completion configuration file
# use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR)
# use \t ot %ws% for an indentation step, if using only spaces for indentation only spaces will be used
# use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue')
# use %cursor% to define where the cursor should be placed after completion
# use %key% for all keys defined in the [Special] section
# you can define a section for each supported filetype to overwrite default settings, the section
# name must match exactly the internal filetype name, run 'geany --ft-names' for a full list

# filetype names:
# C, C++, D, Java, Pascal, ASM, Fortran, CAML, Haskell, VHDL, Perl, PHP, Javascript, Python, Ruby,
# Tcl, Lua, Ferite, Sh, Make, O-Matrix, XML, Docbook, HTML, CSS, SQL, LaTeX, Diff, Conf, None

# Default is used for all filetypes and keys can be overwritten by [filetype] sections
[Default]
year={year}
date={date}
datet={datetime}
sdate={command:date +"%a %b %d %Y"}
cright=(C) Copyright {year} by {developer} <{mail}>
author={developer} <{mail}>
fauthor={developer} <dmaphy@fedoraproject.org>
clog={command:date +"%F"}  {developer}  <{mail}>\n\n * %cursor%\n\n\n
if=if (%cursor%)%block_cursor%
elseif=else if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++) %block_cursor%
while=while (%cursor%) %block_cursor%
do=do%block_cursor%while (%cursor%)
switch=switch (%cursor%)%brace_open%case %cursor%: break;\n\tdefault: %cursor%\n%brace_close%
try=try%block_cursor%catch (%cursor%)%block_cursor%
com=/* %cursor% */
c=/* %cursor% */
priv=private %cursor%
pub=public %cursor%
prot=protected %cursor%
nocur=%cursor%%brace_open%\n%brace_close%
mysystem=My system: {command:uname -a}

# RPM Spec File specific shortcuts
rlog=* {command:date +"%a %b %d %Y"} {developer} <dmaphy@fedoraproject.org> - %cursor%%newline%- %cursor%%newline%


[Special]
brace_open=\n{\n\t
brace_close=}\n%cursor%\n
block=\n{\n\t\n}\n
block_cursor=\n{\n\t%cursor%\n}\n%cursor%\n

# HTML snippets
htmlinput=<input type="text" name="%cursor%" />
html_form=<form action="%cursor%" method="post">\n\n\t<input type="submit" value="%cursor%" />\n</form>
html_ul=<ul class="%cursor%">\n\t<li>%cursor%</li>\n</ul>
html_ol=<ol class="%cursor%">\n\t<li>%cursor%</li>\n</ol>
html_li=<li>%cursor%</li>
html_em=<em>%cursor%</em>
html_strong=<strong>%cursor%</strong>
html_h1=<h1>%cursor%</h1>\n\t%cursor%
html_h2=<h2>%cursor%</h2>
html_h3=<h3>%cursor%</h3>
html_h4=<h4>%cursor%</h4>
html_h5=<h5>%cursor%</h5>
html_h6=<h6>%cursor%</h6>
html_td=<td>%cursor%</td>
html_tr=<tr>%cursor%</tr>
html_th=<th>%cursor%</th>
html_p=<p>%cursor%</p>
html_pre=<pre>%cursor%</pre>
html_head=<head>\n\t<title>%cursor%</title>\n</head>
html_body=<body>\n\t%cursor%\n</body>
html_div=<div class="%cursor%"></div>
html_span=<span class="%cursor%"></div>
html_java=<script type="text/javascript">\n\t%cursor%\n</script>
html_java2=<script type="text/javascript" src="%cursor%"></script>
html_css=<style type="text/css">\n\t%cursor%\n</style>
html_css2=<link rel="stylesheet" type="text/css" href="%cursor%" />
html_rss=<link rel="alternate" type="application/rss+xml" title="%cursor%" href="%cursor%" />
html_title=<title>%cursor%</title>
html_utf=<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
html_a=<a href="%cursor%">%cursor%</a>
html_table=<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>%cursor%</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>%cursor%</td>\n\t\t</tr>\n\t</tbody>\n</table>
html_img=<img src="%cursor%" alt="%cursor%" />
html_code=<code>%cursor%</code>
html_label=<label for="%cursor%">%cursor%</label>
html_fieldset=<fieldset>\n\t<legend>%cursor%</legend>\n</fieldset>
html_sup=<sup>%cursor%</sup>
html_sub=<sub>%cursor%</sub>


[C]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%


[C++]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%


[Java]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%


[PHP]
for=for ($i = 0; $i < %cursor%; $i++)%block_cursor%
fore=foreach (%cursor% as %cursor%)%block_cursor%
elseif=elseif (%cursor%)%block_cursor%
func=function %cursor%(%cursor%)%block_cursor%
pubf=public function %cursor%(%cursor%)%block_cursor%
privf=private function %cursor%(%cursor%)%block_cursor%
protf=protected function %cursor%(%cursor%)%block_cursor%
pubv=public var $%cursor%
privv=private var $%cursor%
protv=protected var $%cursor%
fget=public function get%cursor%()%block_cursor%
fset=public function set%cursor%()%block_cursor%
# Little php snippets written by Atanas Beloborodov <nasko@cod3r.org>
# Some php5 object`s usefull snippets
class=class %cursor% \n{\n\tpublic function __construct(%cursor%)\n\t{\n\t\t%cursor%\n\t}\n\n\tpublic function __destruct(%cursor%)\n\t{\n\t\t%cursor%\n\t}\n\n\t%cursor%\n}
interface=interface %cursor% %block_cursor%
static=public static function %cursor%(%cursor%) %block_cursor%
public=public function %cursor%(%cursor%) %block_cursor%
protected=protected function %cursor%(%cursor%) %block_cursor%
private=private function %cursor%(%cursor%)%block_cursor%
# Control structures :
# Include methods
# Note : require and include is not functions ! Not required braces ()
req=require '%cursor%';
reqo=require_once '%cursor%';
inc=include '%cursor%';
inco=include_once '%cursor%';
# Others :
def=define ('%cursor%','%cursor%');
throw=throw new Exception ('%cursor%');
case=case %cursor%:\n\t%cursor%\n\tbreak;\n
php=<?php\n%cursor%\n?>
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

# completion for HTML tags in PHP
input=%htmlinput%
form=%html_form%
ul=%html_ul%
ol=%html_ol%
li=%html_li%
em=%html_em%
strong=%html_strong%
h1=%html_h1%
h2=%html_h2%
h3=%html_h3%
h4=%html_h4%
h5=%html_h5%
h6=%html_h6%
td=%html_td%
tr=%html_tr%
th=%html_th%
p=%html_p%
pre=%html_pre%
head=%html_head%
body=%html_body%
div=%html_div%
span=%html_span%
java=%html_java%
java2=%html_java2%
css=%html_css%
css2=%html_css2%
rss=%html_rss%
title=%html_title%
utf=%html_utf%
a=%html_a%
table=%html_table%
img=%html_img%
code=%html_code%
label=%html_label%
fieldset=%html_fieldset%
sup=%html_sup%
sub=%html_sub%

alog=%rlog%


[Perl]
for=for (my $i = 0; $i < %cursor%; $i++)%block_cursor%
elsif=elsif (%cursor%)%block_cursor%
fore=foreach my %cursor% (%cursor%)%block_cursor%
sub=sub %cursor% %block_cursor%


[Ferite]
iferr=iferr%block_cursor%fix%block_cursor%
monitor=monitor%block_cursor%handle%block_cursor%


[HTML]
input=%htmlinput%
form=%html_form%
ul=%html_ul%
ol=%html_ol%
li=%html_li%
em=%html_em%
strong=%html_strong%
h1=%html_h1%
h2=%html_h2%
h3=%html_h3%
h4=%html_h4%
h5=%html_h5%
h6=%html_h6%
td=%html_td%
tr=%html_tr%
th=%html_th%
p=%html_p%
pre=%html_pre%
head=%html_head%
body=%html_body%
div=%html_div%
span=%html_span%
java=%html_java%
java2=%html_java2%
css=%html_css%
css2=%html_css2%
rss=%html_rss%
title=%html_title%
utf=%html_utf%
a=%html_a%
table=%html_table%
img=%html_img%
code=%html_code%
label=%html_label%
fieldset=%html_fieldset%
sup=%html_sup%
sub=%html_sub%


[Python]
for=for i in xrange(%cursor%):\n\t
doc=""" %cursor% """\n
elif=elif %cursor%:\n\t
else=else:\n\t%cursor%
if=if %cursor%:\n\t
from=from %cursor% import \n
main=if __name__ == '__main__':\n\t%cursor%
class=class %cursor%(object):\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
def=def %cursor%(self):\n\t""" Function doc\n\n\t@param PARAM: DESCRIPTION\n\t@return RETURN: DESCRIPTION\n\t"""\n\t
get=def get%cursor%(self): return self._var\n
set=def set%cursor%(self): self._var = var\n
.=self.%cursor%
try=try:\n\t%cursor%\nexcept Exception, e:\n\t
py=#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n%cursor%
while=while %cursor%:\n\t
with=with %cursor%:\n\t
head="""\n\t%cursor%PROJECT - MODULE\n\n\tDESCRIPTION\n\n\t@copyright: {year} by {developer} <{mail}>\n\t@license: GNU GPL, see COPYING for details.\n"""\n


[Sh]
if=if [ %cursor% ]; then\n\t%cursor%\nfi
elif=elif [ %cursor% ]; then\n\t%cursor%
else=else\n\t%cursor%
for=for i in `%cursor%`;\ndo\n\t%cursor%\ndone
case=case %cursor% in \n\t%cursor%)\n\t\t%cursor%\n\t\t;;\n\t%cursor%)\n\t\t%cursor%\n\t\t;;\n\t*)\n\t\t%cursor%\n\t\t;;\nesac\n%cursor%


[Javascript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%


[C#]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%


[Vala]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%


[ActionScript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%
